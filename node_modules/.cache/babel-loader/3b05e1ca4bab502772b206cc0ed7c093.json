{"ast":null,"code":"var _jsxFileName = \"/Users/marketing/Documents/MyProjectWBS/finalWBSproject/src/components/ImageGrid.js\";\nimport React from \"react\";\nimport useFirestore from \"./Hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({\n  setSelectedImage\n}) => {\n  const {\n    docs\n  } = useFirestore(\"images\");\n  return (\n    /*#__PURE__*/\n    // if there are image files, map through them and display them\n    React.createElement(\"div\", {\n      className: \"img-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }, docs && docs.map(doc => /*#__PURE__*/React.createElement(motion.div, {\n      className: \"img-wrap\",\n      key: doc.id,\n      layout: true,\n      whileHover: {\n        opacity: 1\n      },\n      onClick: () => {\n        setSelectedImage(doc.url);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(motion.img, {\n      src: doc.url,\n      alt: \"uploaded image\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        delay: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }))))\n  );\n};\n\nexport default ImageGrid;","map":{"version":3,"sources":["/Users/marketing/Documents/MyProjectWBS/finalWBSproject/src/components/ImageGrid.js"],"names":["React","useFirestore","motion","ImageGrid","setSelectedImage","docs","map","doc","id","opacity","url","delay"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,YAAY,CAAC,QAAD,CAA7B;AAEA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,IAAI,IACHA,IAAI,CAACC,GAAL,CAAUC,GAAD,iBACP,oBAAC,MAAD,CAAQ,GAAR;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,GAAG,EAAEA,GAAG,CAACC,EAFX;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,UAAU,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAJd;AAKE,MAAA,OAAO,EAAE,MAAM;AACbL,QAAAA,gBAAgB,CAACG,GAAG,CAACG,GAAL,CAAhB;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,MAAD,CAAQ,GAAR;AACE,MAAA,GAAG,EAAEH,GAAG,CAACG,GADX;AAEE,MAAA,GAAG,EAAC,gBAFN;AAGE,MAAA,OAAO,EAAE;AAAED,QAAAA,OAAO,EAAE;AAAX,OAHX;AAIE,MAAA,OAAO,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAJX;AAKE,MAAA,UAAU,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAFJ;AAFF;AAyBD,CA5BD;;AA8BA,eAAeR,SAAf","sourcesContent":["import React from \"react\";\nimport useFirestore from \"./Hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ setSelectedImage }) => {\n  const { docs } = useFirestore(\"images\");\n\n  return (\n    // if there are image files, map through them and display them\n    <div className=\"img-grid\">\n      {docs &&\n        docs.map((doc) => (\n          <motion.div\n            className=\"img-wrap\"\n            key={doc.id}\n            layout\n            whileHover={{ opacity: 1 }}\n            onClick={() => {\n              setSelectedImage(doc.url);\n            }}\n          >\n            <motion.img\n              src={doc.url}\n              alt=\"uploaded image\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n          </motion.div>\n        ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n"]},"metadata":{},"sourceType":"module"}